import spacy
nlp = spacy.load("en_core_web_sm")


# A simple list of known skills (expand later)
SKILL_KEYWORDS = {
    "python": 1,
    "java": 1,
    "c": 1,
    "c++": 1,
    "c#": 1,
    "javascript": 1,
    "typescript": 1,
    "go": 1,
    "ruby": 1,
    "swift": 1,
    "kotlin": 1,
    "rust": 1,
    "html": 1,
    "css": 1,
    "react": 1,
    "reactjs": 1,
    "next.js": 1,
    "vue": 1,
    "angular": 1,
    "bootstrap": 1,
    "tailwind": 1,
    "jquery": 1,
    "node.js": 1,
    "nodejs": 1,
    "express": 1,
    "flask": 1,
    "django": 1,
    "spring": 1,
    "laravel": 1,
    "fastapi": 1,
    "sql": 1,
    "mysql": 1,
    "postgresql": 1,
    "sqlite": 1,
    "mongodb": 1,
    "redis": 1,
    "firebase": 1,
    "oracle": 1,
    "docker": 1,
    "kubernetes": 1,
    "aws": 1,
    "gcp": 1,
    "azure": 1,
    "jenkins": 1,
    "git": 1,
    "github": 1,
    "gitlab": 1,
    "ci/cd": 1,
    "terraform": 1,
    "machine learning": 1,
    "deep learning": 1,
    "data analysis": 1,
    "data visualization": 1,
    "data mining": 1,
    "pandas": 1,
    "numpy": 1,
    "matplotlib": 1,
    "seaborn": 1,
    "scikit-learn": 1,
    "tensorflow": 1,
    "keras": 1,
    "pytorch": 1,
    "nlp": 1,
    "computer vision": 1,
    "unit testing": 1,
    "integration testing": 1,
    "jest": 1,
    "mocha": 1,
    "pytest": 1,
    "junit": 1,
    "selenium": 1,
    "cypress": 1,
    "communication": 1,
    "leadership": 1,
    "teamwork": 1,
    "problem solving": 1,
    "creativity": 1,
    "adaptability": 1,
    "time management": 1,
    "power bi": 1,
    "tableau": 1,
    "excel": 1,
    "notion": 1,
    "figma": 1,
    "postman": 1,
    "vscode": 1,
    "intellij": 1,
    "android studio": 1,
    "aws certified": 1,
    "azure certified": 1,
    "gcp certified": 1
}


def extract_skills_from_text(text):
    doc = nlp(text.lower())
    extracted_skills = []

    for token in doc:
        if token.text in SKILL_KEYWORDS:
            extracted_skills.append(token.text)

    return list(set(extracted_skills))  # remove duplicates
